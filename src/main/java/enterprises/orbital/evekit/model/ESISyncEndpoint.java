package enterprises.orbital.evekit.model;

/**
 * List of ESI synchronization endpoints.  Each endpoint consists of:
 * <p>
 * <ul>
 * <li>a description</li>
 * <li>an ESI scope required to access the endpoint</li>
 * <li>an indication as to whether the endpoint supports characters or corporations</li>
 * </ul>
 * <p>
 * These endpoints represent all the current data which can be synchronized against a SynchronizedEveAccount.
 * In particular, each endpoint is backed by a particular "synchronizer" which is responsible for updating
 * data for the endpoint.
 */
public enum ESISyncEndpoint {
  CHAR_ASSETS(ESIScope.CHAR_READ_ASSETS),
  CORP_ASSETS(ESIScope.CORP_READ_ASSETS),
  CHAR_BOOKMARKS(ESIScope.CHAR_READ_BOOKMARKS),
  CORP_BOOKMARKS(ESIScope.CORP_READ_BOOKMARKS),
  CHAR_CALENDAR(ESIScope.CHAR_READ_CALENDAR),
  CHAR_CHANNELS(ESIScope.CHAR_READ_CHANNELS),
  CHAR_MEDALS(ESIScope.CHAR_READ_MEDALS),
  CHAR_STANDINGS(ESIScope.CHAR_READ_STANDINGS),
  CHAR_AGENTS(ESIScope.CHAR_READ_AGENTS),
  CHAR_BLUEPRINTS(ESIScope.CHAR_READ_BLUEPRINTS),
  CHAR_FATIGUE(ESIScope.CHAR_READ_FATIGUE),
  CHAR_NOTIFICATIONS(ESIScope.CHAR_READ_NOTIFICATIONS),
  CHAR_CORP_ROLES(ESIScope.CHAR_READ_CORP_ROLES),
  CHAR_TITLES(ESIScope.CHAR_READ_TITLES),
  CHAR_CLONES(ESIScope.CHAR_READ_CLONES),
  CHAR_IMPLANTS(ESIScope.CHAR_READ_IMPLANTS),
  CHAR_CONTACTS(ESIScope.CHAR_READ_CONTACTS),
  CORP_CONTACTS(ESIScope.CORP_READ_CONTACTS),
  CHAR_ALLIANCE_CONTACTS(ESIScope.CHAR_READ_ALLIANCE_CONTACTS),
  CHAR_CONTRACTS(ESIScope.CHAR_READ_CONTRACTS),
  CORP_CONTRACTS(ESIScope.CORP_READ_CONTRACTS),
  CORP_BLUEPRINTS(ESIScope.CORP_READ_BLUEPRINTS),
  CORP_CONTAINER_LOGS(ESIScope.CORP_READ_CONTAINER_LOGS),
  CORP_MEMBERSHIP(ESIScope.CORP_READ_MEMBERSHIP),
  CORP_DIVISIONS(ESIScope.CORP_READ_DIVISIONS),
  CORP_FACILITIES(ESIScope.CORP_READ_FACILITIES),
  CORP_MEDALS(ESIScope.CORP_READ_MEDALS),
  CORP_STANDINGS(ESIScope.CORP_READ_STANDINGS),
  CORP_STARBASES(ESIScope.CORP_READ_STARBASES),
  CORP_STRUCTURES(ESIScope.CORP_READ_STRUCTURES),
  CORP_TITLES(ESIScope.CORP_READ_TITLES),
  CORP_TRACK_MEMBERS(ESIScope.CORP_READ_TRACK_MEMBERS),
  CORP_WALLET_BALANCE(ESIScope.CORP_READ_WALLET),
  CORP_WALLET_JOURNAL(ESIScope.CORP_READ_WALLET),
  CORP_WALLET_TRANSACTIONS(ESIScope.CORP_READ_WALLET),
  CORP_FACTION_WAR(ESIScope.CORP_READ_FACTION_WAR),
  CHAR_FACTION_WAR(ESIScope.CHAR_READ_FACTION_WAR),
  CHAR_FITTINGS(ESIScope.CHAR_READ_FITTINGS),
  CHAR_FLEETS(ESIScope.CHAR_READ_FLEETS),
  CHAR_INDUSTRY(ESIScope.CHAR_READ_INDUSTRY),
  CHAR_MINING(ESIScope.CHAR_READ_MINING),
  CORP_INDUSTRY(ESIScope.CORP_READ_INDUSTRY),
  CORP_MINING(ESIScope.CORP_READ_MINING),
  CHAR_KILL_MAIL(ESIScope.CHAR_READ_KILL_MAIL),
  CORP_KILL_MAIL(ESIScope.CORP_READ_KILL_MAIL),
  CHAR_LOCATION(ESIScope.CHAR_READ_LOCATION),
  CHAR_SHIP_TYPE(ESIScope.CHAR_READ_SHIP_TYPE),
  CHAR_ONLINE(ESIScope.CHAR_READ_ONLINE),
  CHAR_LOYALTY(ESIScope.CHAR_READ_LOYALTY),
  CHAR_MAIL(ESIScope.CHAR_READ_MAIL),
  CHAR_MARKET(ESIScope.CHAR_READ_MARKET),
  CORP_MARKET(ESIScope.CORP_READ_MARKET),
  CHAR_OPPORTUNITIES(ESIScope.CHAR_READ_OPPORTUNITIES),
  CHAR_PLANETS(ESIScope.CHAR_READ_PLANETS),
  CORP_CUSTOMS(ESIScope.CORP_READ_CUSTOMS),
  CHAR_SKILL_QUEUE(ESIScope.CHAR_READ_SKILL_QUEUE),
  CHAR_SKILLS(ESIScope.CHAR_READ_SKILLS),
  CHAR_WALLET_BALANCE(ESIScope.CHAR_READ_WALLET),
  CHAR_WALLET_JOURNAL(ESIScope.CHAR_READ_WALLET),
  CHAR_WALLET_TRANSACTIONS(ESIScope.CHAR_READ_WALLET),
  CHAR_SHEET(null),
  CORP_SHEET(null),
  CORP_SHAREHOLDERS(ESIScope.CORP_READ_WALLET);

  private ESIScope scope;

  ESISyncEndpoint(ESIScope scope) {
    this.scope = scope;
  }

  public ESIScope getScope() {
    return scope;
  }

}
